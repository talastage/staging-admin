import{f as h,g as c,k as p}from"./CGQimWOm.js";const u=h("talentCollections",{state:()=>({collections:[],isLoading:!1,error:null,lastFetchTime:0,activeCollection:null}),getters:{sortedCollections:o=>[...o.collections].sort((s,n)=>new Date(n.updated_at).getTime()-new Date(s.updated_at).getTime()),getCollectionById:o=>s=>o.collections.find(n=>n.id===s),isTalentInCollection:o=>(s,n)=>{const t=o.collections.find(i=>i.id===s);if(!t||!t.preview_talents)return!1;const e=n==null?void 0:n.toString();return e?t.preview_talents.some(i=>i.username===e||i.id===n):!1}},actions:{async fetchCollections(o=!1){var n,t;if(!o&&this.collections.length>0&&Date.now()-this.lastFetchTime<3e5)return this.collections;this.isLoading=!0,this.error=null;try{const{$axios:e}=c(),i=await e.get("/api/talent/collections");return this.collections=i.data.data,this.lastFetchTime=Date.now(),this.collections}catch(e){throw this.error=((t=(n=e.response)==null?void 0:n.data)==null?void 0:t.message)||"Failed to load collections",e}finally{this.isLoading=!1}},async fetchCollection(o){var s,n;try{const{$axios:t}=c(),e=await t.get(`/api/talent/collections/${o}`);return{collection:e.data.collection,talents:e.data.talents}}catch(t){throw this.error=((n=(s=t.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to fetch collection",t}},async createCollection(o){var t,e,i,l,a;const{$axios:s}=c();if(p(),!o.trim())throw new Error("Collection name is required");if(this.collections.some(r=>r.name.toLowerCase()===o.toLowerCase()))throw new Error("A collection with this name already exists");try{const d=(await s.post("/api/talent/collections",{name:o})).data.data;return d&&d.id&&this.collections.unshift(d),d}catch(r){if(((t=r.response)==null?void 0:t.status)>=400)throw new Error(((i=(e=r.response)==null?void 0:e.data)==null?void 0:i.message)||"Failed to create collection");if((a=(l=r.response)==null?void 0:l.data)!=null&&a.data)return r.response.data.data;throw r}},async updateCollection(o,s){var t,e;const{$axios:n}=c();if(!s.name.trim())throw new Error("Collection name is required");try{const l=(await n.put(`/api/talent/collections/${o}`,s)).data.data,a=this.collections.findIndex(r=>r.id===o);return a!==-1&&(this.collections[a]={...this.collections[a],...l}),l}catch(i){throw new Error(((e=(t=i.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to update collection")}},async deleteCollection(o){var s,n;try{const{$axios:t}=c();return await t.delete(`/api/talent/collections/${o}`),this.collections=this.collections.filter(e=>e.id!==o),!0}catch(t){throw console.error("Failed to delete collection:",t),new Error(((n=(s=t.response)==null?void 0:s.data)==null?void 0:n.message)||"Failed to delete collection")}},async addTalentToCollection(o,s){var t,e,i,l;if(!s)throw new Error("Username is required");console.log("Store addTalentToCollection:",{collectionId:o,username:s});const{$axios:n}=c();try{const a=await n.post(`/api/talent/collections/${o}/talents`,{talent_id:s}),r=this.collections.find(d=>d.id===o);return r&&(r.talents_count++,a.data.talent&&((t=r.preview_talents)==null?void 0:t.length)<4&&((e=r.preview_talents)==null||e.unshift(a.data.talent))),a.data}catch(a){throw new Error(((l=(i=a.response)==null?void 0:i.data)==null?void 0:l.message)||"Failed to add talent to collection")}},async removeTalentFromCollection(o,s){var t,e;const{$axios:n}=c();try{await n.delete(`/api/talent/collections/${o}/talents/${s}`);const i=this.collections.find(l=>l.id===o);i&&(i.talents_count--,i.preview_talents&&(i.preview_talents=i.preview_talents.filter(l=>l.username!==s.toString()&&l.id!==s)))}catch(i){throw new Error(((e=(t=i.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to remove talent from collection")}},async reorderCollections(o){var n,t;const{$axios:s}=c();try{await s.post("/api/talent/collections/reorder",{collection_ids:o}),this.collections=o.map(e=>this.collections.find(i=>i.id===e)).filter(e=>e!==void 0)}catch(e){throw new Error(((t=(n=e.response)==null?void 0:n.data)==null?void 0:t.message)||"Failed to reorder collections")}}}});export{u};
