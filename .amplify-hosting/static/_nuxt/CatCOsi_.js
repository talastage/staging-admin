import{c as O,d6 as d,dF as F,z as D,dG as $,dH as w,bH as L,dI as b,Q as _,dJ as x}from"./CGQimWOm.js";import{u as I}from"./BHJozufe.js";function v(s,c,i){const[r={},n]=typeof c=="string"?[{},c]:[c,i],t=O(()=>d(s)),e=r.key||F([n,typeof t.value=="string"?t.value:"",...P(r)]);if(!e||typeof e!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+e);if(!s)throw new Error("[nuxt] [useFetch] request is missing.");const o=e===n?"$f"+e:e;if(!r.baseURL&&typeof t.value=="string"&&t.value[0]==="/"&&t.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:a,lazy:h,default:f,transform:E,pick:R,watch:p,immediate:T,getCachedData:k,deep:C,dedupe:A,...U}=r,m=D({...$,...U,cache:typeof r.cache=="boolean"?void 0:r.cache}),q={server:a,lazy:h,default:f,transform:E,pick:R,immediate:T,getCachedData:k,deep:C,dedupe:A,watch:p===!1?[]:[m,t,...p||[]]};let u;return I(o,()=>{var g;(g=u==null?void 0:u.abort)==null||g.call(u,new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),u=typeof AbortController<"u"?new AbortController:{};const y=d(r.timeout);let l;return y&&(l=setTimeout(()=>u.abort(new DOMException("Request aborted due to timeout.","AbortError")),y),u.signal.onabort=()=>clearTimeout(l)),(r.$fetch||globalThis.$fetch)(t.value,{signal:u.signal,...m}).finally(()=>{clearTimeout(l)})},q)}function P(s){var i;const c=[((i=d(s.method))==null?void 0:i.toUpperCase())||"GET",d(s.baseURL)];for(const r of[s.params||s.query]){const n=d(r);if(!n)continue;const t={};for(const[e,o]of Object.entries(n))t[d(e)]=d(o);c.push(t)}return c}function N(){const s=_(),c=w("auth_token"),i=w("XSRF-TOKEN"),r={baseURL:s.public.backendUrl,credentials:"include",headers:{Accept:"application/json","Content-Type":"application/json"},onRequest({options:e}){c.value&&(e.headers={...e.headers,Authorization:`Bearer ${c.value}`}),i.value&&(e.headers={...e.headers,"X-XSRF-TOKEN":decodeURIComponent(i.value)})},onRequestError({error:e}){console.error("Request error:",e)},onResponse({response:e}){e.status===401&&L("/login")},onResponseError({error:e}){console.error("Response error:",e),e.statusCode===404?b({statusCode:404,message:"Resource not found"}):e.statusCode>=500&&b({statusCode:500,message:"Server error"})}};async function n(){await v("/sanctum/csrf-cookie",{baseURL:s.public.backendUrl,credentials:"include"},"$UqgiltlUfE")}async function t(e,o={}){try{console.log(`Fetching URL: ${e} with options:`,o);const a=x(o,r);a.method==="GET"&&(a.cache=a.cache||"no-cache");const{data:h,error:f}=await v(e,a,"$HgqqyPIEgZ");if(f.value)throw console.error("Fetch error:",f.value),f.value;if(!h.value)throw console.error("No data received from the API"),new Error("No data received from the API");return h.value}catch(a){throw console.error("API call error:",a),a}}return{get:(e,o)=>t(e,{...o,method:"GET"}),post:async(e,o,a)=>(await n(),t(e,{...a,method:"POST",body:o})),put:async(e,o,a)=>(await n(),t(e,{...a,method:"PUT",body:o})),patch:async(e,o,a)=>(await n(),t(e,{...a,method:"PATCH",body:o})),delete:async(e,o)=>(await n(),t(e,{...o,method:"DELETE"}))}}export{N as u};
