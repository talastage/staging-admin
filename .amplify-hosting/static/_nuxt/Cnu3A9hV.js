import{f as n,g as o,k as l,i as d}from"./CGQimWOm.js";const c=n("register",{state:()=>({step:"contact-info",email:"",firstName:"",lastName:"",displayName:"",gender:"",country:null,birthday:"",password:"",userId:null,isVerificationSent:!1,isSocialRegistration:!1,socialUserId:null,socialData:null,errors:{email:"",first_name:"",last_name:"",display_name:"",gender:"",country_id:"",birthday:"",password:"",verification_code:""}}),getters:{hasErrors:s=>Object.values(s.errors).some(e=>e!==""),formData:s=>{var e;return{email:s.email,first_name:s.firstName,last_name:s.lastName,display_name:s.displayName,gender:s.gender,country_id:(e=s.country)==null?void 0:e.id,birthday:s.birthday,password:s.password}}},actions:{setStep(s){this.step=s},async registerEmail(){const{$axios:s}=o();try{const e=await s.post("/api/register/contact-info",{email:this.email});return this.userId=e.data.user_id,this.clearErrors(),(e.data.message.includes("resent")||e.data.incomplete_registration)&&this.setStep("verification"),e.data}catch(e){throw this.handleError(e),e}},async verifyCode(s){const{$axios:e}=o();try{const r=await e.post("/api/register/verify-code",{email:this.email,code:s});return this.setStep("personal-info"),this.clearErrors(),r.data}catch(r){throw this.handleError(r),r}},async resendVerificationCode(){const{$axios:s}=o();try{const e=await s.post("/api/register/resend-code",{email:this.email});return this.clearErrors(),e.data}catch(e){throw this.handleError(e),e}},async completeRegistration(s){try{const e=await this.registerPersonalInfo();return this.clearErrors(),e}catch(e){throw this.handleError(e),e}},async registerPersonalInfo(){var r;const{$axios:s}=o();l();const e=d();try{if(!this.validatePersonalInfo())throw new Error("Please check the form for errors");const t=await s.post("/api/register/personal-info",{user_id:this.userId,first_name:this.firstName,last_name:this.lastName,display_name:this.displayName||null,gender:this.gender,country_id:(r=this.country)==null?void 0:r.id,birthday:this.birthday,password:this.password});return this.clearErrors(),t.data.user&&t.data.token&&await e.handleRegistrationSuccess({user:t.data.user,token:t.data.token}),t.data}catch(t){throw this.handleError(t),t}},handleError(s){if(s.response){if(s.response.status===422){const e=s.response.data.errors||{};if(this.clearErrors(),s.response.data.error)throw this.errors.email=s.response.data.error,new Error(s.response.data.error);const r={email:"email",country_id:"country_id",first_name:"first_name",last_name:"last_name",display_name:"display_name",gender:"gender",birthday:"birthday",password:"password"};Object.entries(e).forEach(([t,a])=>{const i=r[t];i&&(this.errors[i]=Array.isArray(a)?a[0]:a)}),e.age&&(this.errors.birthday="You must be at least 18 years old")}else if(s.response.data.error)throw this.errors.email=s.response.data.error,new Error(s.response.data.error)}else throw s.message?new Error(s.message):new Error("An unexpected error occurred")},clearErrors(){Object.keys(this.errors).forEach(s=>{this.errors[s]=""})},setSocialRegistration(s){this.isSocialRegistration=s.isSocial,this.socialUserId=s.userId,this.socialData=s.socialData,s.socialData&&(this.firstName=s.socialData.first_name||"",this.lastName=s.socialData.last_name||"",this.email=s.socialData.email||"")},resetForm(){this.step="contact-info",this.email="",this.firstName="",this.lastName="",this.displayName="",this.gender="",this.country=null,this.birthday="",this.password="",this.userId=null,this.isVerificationSent=!1,this.isSocialRegistration=!1,this.socialUserId=null,this.socialData=null,this.clearErrors()},validateContactInfo(){this.clearErrors();let s=!0;const e=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;return(!this.email||!e.test(this.email))&&(this.errors.email="Please enter a valid email address",s=!1),s},validatePersonalInfo(){var e,r;this.clearErrors();let s=!0;if((e=this.firstName)!=null&&e.trim()||(this.errors.first_name="First name is required",s=!1),(r=this.lastName)!=null&&r.trim()||(this.errors.last_name="Last name is required",s=!1),this.gender||(this.errors.gender="Gender is required",s=!1),this.country||(this.errors.country_id="Country is required",s=!1),this.birthday||(this.errors.birthday="Birthday is required",s=!1),!this.password)this.errors.password="Password is required",s=!1;else{const a=[{condition:this.password.length>=8,message:"at least 8 characters"},{condition:/[a-z]/.test(this.password),message:"one lowercase letter"},{condition:/[A-Z]/.test(this.password),message:"one uppercase letter"},{condition:/\d/.test(this.password),message:"one number"},{condition:/[!@#$%^&*(),.?":{}|<>]/.test(this.password),message:"one special character"}].filter(i=>!i.condition);a.length>0&&(this.errors.password="Password must include "+a.map(i=>i.message).join(", "),s=!1)}return this.displayName&&this.displayName.length>255&&(this.errors.display_name="Display name cannot exceed 255 characters",s=!1),s}}});export{c as u};
