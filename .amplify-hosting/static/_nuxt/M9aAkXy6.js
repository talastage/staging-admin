import{f as I,j as p,g as S,c as x}from"./CGQimWOm.js";import{s as A}from"./rtPmyJLL.js";const D=I("walletAuth",()=>{const v=p(!1),s=p(""),o=p(!1),n=p(null),l=p(0),{$axios:i}=S(),y=x(()=>{if(!l.value)return"00:00";const e=Math.floor(l.value/60),a=l.value%60;return`${e.toString().padStart(2,"0")}:${a.toString().padStart(2,"0")}`}),w=async e=>{var a,r;o.value=!0,s.value="";try{const t=await i.post("/api/wallet/auth/verify-pin",{pin:e});return v.value=!0,n.value=new Date(t.data.expires_at),d(),t.data}catch(t){throw s.value=((r=(a=t.response)==null?void 0:a.data)==null?void 0:r.message)||"Invalid PIN. Please try again.",t}finally{o.value=!1}},g=async()=>{try{await i.post("/api/wallet/auth/logout")}catch(e){console.error("Error during wallet logout:",e)}finally{c()}},c=()=>{v.value=!1,n.value=null,l.value=0,s.value=""},m=e=>{v.value=e,e&&P()},d=()=>{if(!n.value)return;h();const e=A(()=>{h()||clearInterval(e)},1e3)},h=()=>{if(!n.value)return!1;const e=new Date,a=n.value.getTime()-e.getTime();return a<=0?(c(),!1):(l.value=Math.floor(a/1e3),!0)},P=async()=>{try{const e=await i.get("/api/wallet/auth/session");e.data.authenticated?(n.value=new Date(e.data.expires_at),d()):c()}catch(e){console.error("Failed to check session expiry:",e),c()}};return{isAuthenticated:v,authError:s,isLoading:o,sessionExpiresAt:n,remainingTime:l,formattedRemainingTime:y,verifyPin:w,logout:g,resetState:c,setAuthenticated:m,requestPinReset:async e=>{var a,r;o.value=!0,s.value="";try{console.log("Sending PIN reset request to API for email:",e);const t=await i.post("/api/wallet/auth/request-reset",{email:e});return console.log("API response for PIN reset request:",t.data),t.data}catch(t){throw console.error("PIN reset request error:",t),s.value=((r=(a=t.response)==null?void 0:a.data)==null?void 0:r.message)||"Failed to request PIN reset",t}finally{o.value=!1}},verifyResetCode:async(e,a)=>{var r,t;o.value=!0,s.value="";try{return(await i.post("/api/wallet/auth/verify-reset-code",{email:e,code:a})).data}catch(u){throw s.value=((t=(r=u.response)==null?void 0:r.data)==null?void 0:t.message)||"Invalid reset code",u}finally{o.value=!1}},resetPin:async(e,a,r)=>{var t,u;o.value=!0,s.value="";try{return(await i.post("/api/wallet/auth/reset-pin",{email:e,code:a,new_pin:r})).data}catch(f){throw s.value=((u=(t=f.response)==null?void 0:t.data)==null?void 0:u.message)||"Failed to reset PIN",f}finally{o.value=!1}}}});export{D as u};
