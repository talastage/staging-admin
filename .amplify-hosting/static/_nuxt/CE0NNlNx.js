import{g as m}from"./CGQimWOm.js";const L=()=>{const{$axios:d}=m();return{uploadFile:async(t,y,g,r={})=>{var l;try{let s="jpg",a="application/octet-stream";t instanceof File?(s=((l=t.name.split(".").pop())==null?void 0:l.toLowerCase())||"jpg",a=t.type):(t.type.includes("png")?s="png":t.type.includes("jpeg")||t.type.includes("jpg")?s="jpg":t.type.includes("mp4")&&(s="mp4"),a=t.type);const i={extension:s};r.fileType&&(i.file_type=r.fileType);const{data:o}=await d.get(y,{params:i});if(!o.url||!o.key)throw new Error("Invalid presigned URL response");await new Promise((w,n)=>{const e=new XMLHttpRequest;e.upload.addEventListener("progress",p=>{if(p.lengthComputable&&r.onProgress){const f=Math.round(p.loaded/p.total*100);r.onProgress(f)}}),e.addEventListener("load",()=>{e.status>=200&&e.status<300?w(e.response):n(new Error(`Upload failed: ${e.status} ${e.statusText}`))}),e.addEventListener("error",()=>{n(new Error("Network error during upload"))}),e.addEventListener("abort",()=>{n(new Error("Upload was aborted"))}),e.open("PUT",o.url),e.setRequestHeader("Content-Type",a),e.send(t)});const u={photo_key:o.key};r.fileType&&(u.file_type=r.fileType);const{data:c}=await d.post(g,u);return r.onSuccess&&r.onSuccess(c),c}catch(s){throw console.error("Upload error:",s),r.onError&&r.onError(s),s}}}};export{L as u};
