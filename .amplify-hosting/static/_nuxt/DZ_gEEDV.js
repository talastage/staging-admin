import{j as o,c as v,g as i}from"./CGQimWOm.js";const E=()=>{const l=o([]),g=o([]),n=o(null),u=o([]),t=o(!1),s=o(null),a=o({currentPage:1,lastPage:1,perPage:20,total:0}),f=async()=>{t.value=!0,s.value=null;try{const{data:e}=await i().$axios.get("/api/projects/premiering-categories"),c=e.data.filter((r,C,m)=>C===m.findIndex(w=>w.id===r.id));l.value=c}catch(e){s.value="Failed to fetch categories",console.error("Error fetching categories:",e)}finally{t.value=!1}},P=async()=>{t.value=!0,s.value=null;try{const{data:e}=await i().$axios.get("/api/projects/premiering-categories/with-projects");g.value=e.data}catch(e){s.value="Failed to fetch categories with projects",console.error("Error fetching categories with projects:",e)}finally{t.value=!1}},p=async(e,c=1)=>{try{const{data:r}=await i().$axios.get(`/api/projects/premiering-categories/${e}`,{params:{page:c}});return console.log("API Response:",r),r}catch(r){throw console.error("Error fetching category projects:",r),r}},h=async()=>{!t.value&&n.value&&a.value.currentPage<a.value.lastPage&&await p(n.value.slug,a.value.currentPage+1)},y=()=>{n.value=null,u.value=[],a.value={currentPage:1,lastPage:1,perPage:20,total:0}},d=v(()=>a.value.currentPage<a.value.lastPage),j=v(()=>t.value);return{categories:l,categoriesWithProjects:g,currentCategory:n,currentCategoryProjects:u,loading:t,error:s,pagination:a,fetchCategories:f,fetchCategoriesWithProjects:P,fetchCategoryProjects:p,loadMoreProjects:h,resetCurrentCategory:y,hasMorePages:d,isLoading:j,getCategoryBySlug:e=>l.value.find(c=>c.slug===e)}};export{E as u};
