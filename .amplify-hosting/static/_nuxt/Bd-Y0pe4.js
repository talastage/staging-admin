import{f as v,j as t,c as m,g as f}from"./CGQimWOm.js";const n={google:{icon:"mdi-google",color:"red-lighten-1"},facebook:{icon:"mdi-facebook",color:"blue"},twitter:{icon:"mdi-twitter",color:"light-blue"},instagram:{icon:"mdi-instagram",color:"pink"},tiktok:{icon:"mdi-music-note",color:"black"},linkedin:{icon:"mdi-linkedin",color:"blue-darken-3"}},h=v("socialProviders",()=>{const o=t([]),e=t(!1),a=t(!1),i=t(null),u=m(()=>o.value);return{providers:o,activeProviders:u,isLoading:e,isLoaded:a,error:i,fetchActiveProviders:async()=>{if(!(e.value||a.value)){e.value=!0,i.value=null;try{const{$axios:l}=f(),d=await l.get("/api/social-auth/active-providers");o.value=d.data.map(r=>{var c,s;return{name:r.name,label:r.display_name,icon:((c=n[r.name])==null?void 0:c.icon)||"mdi-account",color:((s=n[r.name])==null?void 0:s.color)||"primary"}}),a.value=!0}catch(l){i.value=l.message||"Failed to fetch social providers",console.error("Failed to fetch active providers:",l)}finally{e.value=!1}}},reset:()=>{o.value=[],e.value=!1,a.value=!1,i.value=null}}});export{h as useSocialProvidersStore};
