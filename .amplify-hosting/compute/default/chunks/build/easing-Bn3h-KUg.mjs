class Box{constructor(t){let{x:e,y:i,width:r,height:s}=t;this.x=e,this.y=i,this.width=r,this.height=s}get top(){return this.y}get bottom(){return this.y+this.height}get left(){return this.x}get right(){return this.x+this.width}}function getOverflow(t,e){return{x:{before:Math.max(0,e.left-t.left),after:Math.max(0,t.right-e.right)},y:{before:Math.max(0,e.top-t.top),after:Math.max(0,t.bottom-e.bottom)}}}function getTargetBox(t){return Array.isArray(t)?new Box({x:t[0],y:t[1],width:0,height:0}):t.getBoundingClientRect()}function nullifyTransforms(t){const e=t.getBoundingClientRect(),i=getComputedStyle(t),r=i.transform;if(r){let s,n,o,a,h;if(r.startsWith("matrix3d("))s=r.slice(9,-1).split(/, /),n=+s[0],o=+s[5],a=+s[12],h=+s[13];else{if(!r.startsWith("matrix("))return new Box(e);s=r.slice(7,-1).split(/, /),n=+s[0],o=+s[3],a=+s[4],h=+s[5]}const f=i.transformOrigin,g=e.x-a-(1-n)*parseFloat(f),l=e.y-h-(1-o)*parseFloat(f.slice(f.indexOf(" ")+1)),u=n?e.width/n:t.offsetWidth+1,c=o?e.height/o:t.offsetHeight+1;return new Box({x:g,y:l,width:u,height:c})}return new Box(e)}function animate(t,e,i){if(void 0===t.animate)return{finished:Promise.resolve()};let r;try{r=t.animate(e,i)}catch(t){return{finished:Promise.resolve()}}return void 0===r.finished&&(r.finished=new Promise((t=>{r.onfinish=()=>{t(r)}}))),r}const t="cubic-bezier(0.4, 0, 0.2, 1)",e="cubic-bezier(0.0, 0, 0.2, 1)",i="cubic-bezier(0.4, 0, 1, 1)";export{Box as B,animate as a,getOverflow as b,i as c,e as d,getTargetBox as g,nullifyTransforms as n,t as s};
