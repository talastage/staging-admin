import{ref as e,computed as a}from"vue";import{u as r}from"./server.mjs";const usePremieringCategories=()=>{const t=e([]),o=e([]),c=e(null),l=e([]),s=e(!1),i=e(null),g=e({currentPage:1,lastPage:1,perPage:20,total:0}),fetchCategoryProjects=async(e,a=1)=>{try{const{data:t}=await r().$axios.get(`/api/projects/premiering-categories/${e}`,{params:{page:a}});return console.log("API Response:",t),t}catch(e){throw console.error("Error fetching category projects:",e),e}},n=a((()=>g.value.currentPage<g.value.lastPage)),u=a((()=>s.value));return{categories:t,categoriesWithProjects:o,currentCategory:c,currentCategoryProjects:l,loading:s,error:i,pagination:g,fetchCategories:async()=>{s.value=!0,i.value=null;try{const{data:e}=await r().$axios.get("/api/projects/premiering-categories"),a=e.data.filter(((e,a,r)=>a===r.findIndex((a=>a.id===e.id))));t.value=a}catch(e){i.value="Failed to fetch categories",console.error("Error fetching categories:",e)}finally{s.value=!1}},fetchCategoriesWithProjects:async()=>{s.value=!0,i.value=null;try{const{data:e}=await r().$axios.get("/api/projects/premiering-categories/with-projects");o.value=e.data}catch(e){i.value="Failed to fetch categories with projects",console.error("Error fetching categories with projects:",e)}finally{s.value=!1}},fetchCategoryProjects:fetchCategoryProjects,loadMoreProjects:async()=>{!s.value&&c.value&&g.value.currentPage<g.value.lastPage&&await fetchCategoryProjects(c.value.slug,g.value.currentPage+1)},resetCurrentCategory:()=>{c.value=null,l.value=[],g.value={currentPage:1,lastPage:1,perPage:20,total:0}},hasMorePages:n,isLoading:u,getCategoryBySlug:e=>t.value.find((a=>a.slug===e))}};export{usePremieringCategories as u};
