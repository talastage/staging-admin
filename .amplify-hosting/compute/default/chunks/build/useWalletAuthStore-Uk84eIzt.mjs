import{d as e,u as a}from"./server.mjs";import{ref as t,computed as r}from"vue";import{s as l}from"./interval-gl53xdpR.mjs";const s=e("walletAuth",(()=>{const e=t(!1),s=t(""),o=t(!1),i=t(null),n=t(0),{$axios:u}=a(),v=r((()=>{if(!n.value)return"00:00";const e=Math.floor(n.value/60),a=n.value%60;return`${e.toString().padStart(2,"0")}:${a.toString().padStart(2,"0")}`})),resetState=()=>{e.value=!1,i.value=null,n.value=0,s.value=""},startSessionTimer=()=>{i.value&&(updateRemainingTime(),l())},updateRemainingTime=()=>{if(!i.value)return!1;const e=new Date,a=i.value.getTime()-e.getTime();return a<=0?(resetState(),!1):(n.value=Math.floor(a/1e3),!0)},checkSessionExpiry=async()=>{try{const e=await u.get("/api/wallet/auth/session");e.data.authenticated?(i.value=new Date(e.data.expires_at),startSessionTimer()):resetState()}catch(e){console.error("Failed to check session expiry:",e),resetState()}};return{isAuthenticated:e,authError:s,isLoading:o,sessionExpiresAt:i,remainingTime:n,formattedRemainingTime:v,verifyPin:async a=>{var t,r;o.value=!0,s.value="";try{const t=await u.post("/api/wallet/auth/verify-pin",{pin:a});return e.value=!0,i.value=new Date(t.data.expires_at),startSessionTimer(),t.data}catch(e){throw s.value=(null==(r=null==(t=e.response)?void 0:t.data)?void 0:r.message)||"Invalid PIN. Please try again.",e}finally{o.value=!1}},logout:async()=>{try{await u.post("/api/wallet/auth/logout")}catch(e){console.error("Error during wallet logout:",e)}finally{resetState()}},resetState:resetState,setAuthenticated:a=>{e.value=a,a&&checkSessionExpiry()},requestPinReset:async e=>{var a,t;o.value=!0,s.value="";try{console.log("Sending PIN reset request to API for email:",e);const a=await u.post("/api/wallet/auth/request-reset",{email:e});return console.log("API response for PIN reset request:",a.data),a.data}catch(e){throw console.error("PIN reset request error:",e),s.value=(null==(t=null==(a=e.response)?void 0:a.data)?void 0:t.message)||"Failed to request PIN reset",e}finally{o.value=!1}},verifyResetCode:async(e,a)=>{var t,r;o.value=!0,s.value="";try{return(await u.post("/api/wallet/auth/verify-reset-code",{email:e,code:a})).data}catch(e){throw s.value=(null==(r=null==(t=e.response)?void 0:t.data)?void 0:r.message)||"Invalid reset code",e}finally{o.value=!1}},resetPin:async(e,a,t)=>{var r,l;o.value=!0,s.value="";try{return(await u.post("/api/wallet/auth/reset-pin",{email:e,code:a,new_pin:t})).data}catch(e){throw s.value=(null==(l=null==(r=e.response)?void 0:r.data)?void 0:l.message)||"Failed to reset PIN",e}finally{o.value=!1}}}}));export{s as u};
