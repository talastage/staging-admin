import{bc as t,u as e,bd as r,aA as i}from"./server.mjs";import{u as a}from"./useWalletAuthStore-Uk84eIzt.mjs";import{u as o}from"./useWalletStore-C5It8oQZ.mjs";import"vue";import"node:http";import"node:https";import"node:zlib";import"node:stream";import"node:buffer";import"node:util";import"node:url";import"node:net";import"node:fs";import"node:path";import"../_/nitro.mjs";import"consola/core";import"nuxt-site-config/urls";import"ipx";import"unhead";import"vue-router";import"pinia-plugin-persistedstate";import"vue/server-renderer";import"./interval-gl53xdpR.mjs";import"axios";const l=t((async(t,l)=>{let s,p;const n=a(),m=o(),{$axios:u}=e();if(!["/wallet/verify-pin","/wallet/activate","/wallet/reset-pin"].includes(t.path)){if(!m.wallet)try{[s,p]=r((()=>m.fetchWallet())),await s,p()}catch(t){console.error("Failed to fetch wallet data:",t)}if(m.wallet){if("active"!==m.wallet.data.status)return i("/wallet/activate")}if(!["/wallet/deposit"].includes(t.path)&&!n.isAuthenticated)try{if(!([s,p]=r((()=>u.get("/api/wallet/auth/check-session"))),s=await s,p(),s).data.authenticated)return i("/wallet/verify-pin",{query:{redirect:t.fullPath}});n.setAuthenticated(!0)}catch(e){return console.error("Failed to check wallet session:",e),i("/wallet/verify-pin",{query:{redirect:t.fullPath}})}}}));export{l as default};
