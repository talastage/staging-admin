const t=Symbol("Forwarded refs");function getDescriptor(t,e){let r=t;for(;r;){const t=Reflect.getOwnPropertyDescriptor(r,e);if(t)return t;r=Object.getPrototypeOf(r)}}function forwardRefs(e){for(var r=arguments.length,o=new Array(r>1?r-1:0),s=1;s<r;s++)o[s-1]=arguments[s];return e[t]=o,new Proxy(e,{get(t,e){if(Reflect.has(t,e))return Reflect.get(t,e);if("symbol"!=typeof e&&!e.startsWith("$")&&!e.startsWith("__"))for(const t of o)if(t.value&&Reflect.has(t.value,e)){const r=Reflect.get(t.value,e);return"function"==typeof r?r.bind(t.value):r}},has(t,e){if(Reflect.has(t,e))return!0;if("symbol"==typeof e||e.startsWith("$")||e.startsWith("__"))return!1;for(const t of o)if(t.value&&Reflect.has(t.value,e))return!0;return!1},set(t,e,r){if(Reflect.has(t,e))return Reflect.set(t,e,r);if("symbol"==typeof e||e.startsWith("$")||e.startsWith("__"))return!1;for(const t of o)if(t.value&&Reflect.has(t.value,e))return Reflect.set(t.value,e,r);return!1},getOwnPropertyDescriptor(e,r){var s,f;const n=Reflect.getOwnPropertyDescriptor(e,r);if(n)return n;if("symbol"!=typeof r&&!r.startsWith("$")&&!r.startsWith("__")){for(const t of o){if(!t.value)continue;const e=null!=(s=getDescriptor(t.value,r))?s:"_"in t.value?getDescriptor(null==(f=t.value._)?void 0:f.setupState,r):void 0;if(e)return e}for(const e of o){const o=e.value&&e.value[t];if(!o)continue;const s=o.slice();for(;s.length;){const e=s.shift(),o=getDescriptor(e.value,r);if(o)return o;const f=e.value&&e.value[t];f&&s.push(...f)}}}}})}export{forwardRefs as f};
