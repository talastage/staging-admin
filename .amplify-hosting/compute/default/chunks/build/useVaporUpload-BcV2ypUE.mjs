import{u as e}from"./server.mjs";const useVaporUpload=()=>{const{$axios:t}=e();return{uploadFile:async(e,r,o,s={})=>{var n;try{let a="jpg",p="application/octet-stream";e instanceof File?(a=(null==(n=e.name.split(".").pop())?void 0:n.toLowerCase())||"jpg",p=e.type):(e.type.includes("png")?a="png":e.type.includes("jpeg")||e.type.includes("jpg")?a="jpg":e.type.includes("mp4")&&(a="mp4"),p=e.type);const i={extension:a};s.fileType&&(i.file_type=s.fileType);const{data:d}=await t.get(r,{params:i});if(!d.url||!d.key)throw new Error("Invalid presigned URL response");const l=new Promise(((t,r)=>{const o=new(void 0);o.upload.addEventListener("progress",(e=>{if(e.lengthComputable&&s.onProgress){const t=Math.round(e.loaded/e.total*100);s.onProgress(t)}})),o.addEventListener("load",(()=>{o.status>=200&&o.status<300?t(o.response):r(new Error(`Upload failed: ${o.status} ${o.statusText}`))})),o.addEventListener("error",(()=>{r(new Error("Network error during upload"))})),o.addEventListener("abort",(()=>{r(new Error("Upload was aborted"))})),o.open("PUT",d.url),o.setRequestHeader("Content-Type",p),o.send(e)}));await l;const c={photo_key:d.key};s.fileType&&(c.file_type=s.fileType);const{data:u}=await t.post(o,c);return s.onSuccess&&s.onSuccess(u),u}catch(e){throw console.error("Upload error:",e),s.onError&&s.onError(e),e}}}};export{useVaporUpload as u};
